---
- name: Assert that the prerequisites are defined
  tags: rpmforge
  assert:
    that:
      - rpmforge_pkg is defined
      - rpmforge_ver is defined
      - rpmforge_rel is defined
      - rpmforge_baseurl is defined

- name: Attempting to generate temporary file
  tags: rpmforge
  tempfile:
    prefix: 'rpmforge.'
    state: file
    suffix: '.rpm'
  register: rpmforge_tempfile

- name: Attempting to download package to temporary location
  tags: rpmforge
  get_url:
    dest: "{{ rpmforge_tempfile.path }}"
    force: yes
    url: "{{ rpmforge_fetch }}"
  register: rpmforge_get_url
  when: rpmforge_tempfile is success

- name: Ensure that the {{ repoforge_pkg }} package is installed
  tags: rpmforge
  become: true
  yum:
    disable_plugin: "{{ rpmforge_disable_plugin|join(',') }}"
    disablerepo: "{{ rpmforge_disablerepo|join(',') }}"
    enable_plugin: "{{ rpmforge_enable_plugin|join(',') }}"
    enablerepo: "{{ rpmforge_enablerepo|join(',') }}"
    name: "{{ item }}"
    state: present
  register: rpmforge_yum
  with_items: "{{ rpmforge_mktemp.stdout }}"
  when: rpmforge_get_url is success

- name: Attempting to purge temporary package from the filesystem
  tags: rpmforge
  file:
    path: "{{ rpmforge_tempfile.path }}"
    state: absent
  when:
    - rpmforge_tempfile is success
    - rpmforge_yum is success

- name: Attempting to overlay rpmforge repository configurations
  tags: rpmforge
  become: true
  template:
    src: rpmforge.repo.j2
    dest: /etc/yum.repos.d/rpmforge.repo
    owner: root
    group: root
    mode: 0644
  when: rpmforge_yum is success

- name: Ensure that the repforge gpg keys are installed
  tags: rpmforge
  become: true
  rpm_key:
    key: "{{ item }}"
    state: present
  with_items:
    - /etc/pki/rpm-gpg/RPM-GPG-KEY-rpmforge-dag
    - /etc/pki/rpm-gpg/RPM-GPG-KEY-rpmforge-fabian

- name: Ensure that the required rpmforge packages are installed
  become: true
  yum:
    disable_plugin: "{{ rpmforge_disable_plugin|join(',') }}"
    disablerepo: "{{ rpmforge_disablerepo|join(',') }}"
    enable_plugin: "{{ rpmforge_enable_plugin|join(',') }}"
    enablerepo: "{{ rpmforge_enablerepo|join(',') }}"
    name: "{{ item }}"
    state: present
  with_items: "{{ rpmforge_packages }}"
  when:
    - rpmforge_packages|length > 0
    - rpmforge_yum is success
...
